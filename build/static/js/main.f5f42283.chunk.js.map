{"version":3,"sources":["stores/Apple/ItemStore.js","stores/Apple/ListStore.js","stores/RootStore.js","components/Apple/Item.js","components/Apple/List.js","index.js"],"names":["ItemStore","title","count","id","Math","random","this","makeAutoObservable","ListStore","list","currentApple","currentCount","eatenApple","eatenCount","addApple","floor","push","removeApple","forEach","item","RootStoreContext","createContext","RootStoreProvider","store","children","Provider","value","useRootStore","useContext","observer","listStore","className","src","alt","onClick","map","rootStore","ReactDOM","render","document","getElementById"],"mappings":"6MAaeA,EAPb,WAAYC,EAAOC,GAAQ,yBAH3BC,GAAKC,KAAKC,SAGgB,KAF1BJ,MAAQ,GAEkB,KAD1BC,MAAQ,EAENI,KAAKL,MAAQA,EACbK,KAAKJ,MAAQA,EACbK,YAAmBD,OC2BRE,EA3Bb,WAAYC,GAAO,IAAD,gCALlBA,KAAO,GAKW,KAJlBC,aAAe,EAIG,KAHlBC,aAAe,EAGG,KAFlBC,WAAa,EAEK,KADlBC,WAAa,EACK,KAMlBC,SAAW,WACT,IAAMZ,EAAQE,KAAKW,MAAsB,GAAhBX,KAAKC,SAAgB,IAC9C,EAAKK,eACL,EAAKC,cAAgBT,EACrB,EAAKO,KAAKO,KAAK,IAAIhB,EAAU,sBAASE,EAAOA,KAV7B,KAYlBe,YAAc,SAACd,GACb,EAAKM,KAAO,GACZ,EAAKA,KAAKS,SAAQ,SAAAC,GACZA,EAAKhB,KAAOA,GACd,EAAKO,eACL,EAAKC,cAAgBQ,EAAKjB,MAC1B,EAAKU,aACL,EAAKC,YAAcM,EAAKjB,OAExB,EAAKO,KAAKO,KAAKG,OApBfV,IACFH,KAAKG,KAAOA,GAEdF,YAAmBD,O,OCJjBc,EAAmBC,0BAEnBC,EAAoB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClC,OACE,cAACJ,EAAiBK,SAAlB,CAA2BC,MAAOH,EAAlC,SACGC,KAKDG,EAAe,WACnB,OAAOC,qBAAWR,ICCLS,eAlBF,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACNW,EAAcH,IAAdG,UACR,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKC,IAAI,cAAcC,IAAI,YAE7B,sBAAKF,UAAU,gBAAf,UACE,qBAAKA,UAAU,oBAAf,SAAoCZ,EAAKlB,QACzC,sBAAK8B,UAAU,uBAAf,UAAuCZ,EAAKjB,MAA5C,eAEF,qBAAK6B,UAAU,cAAf,SACE,wBAAQA,UAAU,YAAYG,QAAS,WAAQJ,EAAUb,YAAYE,EAAKhB,KAA1E,kCCmCO0B,eA9CF,WAAO,IACVC,EAAcH,IAAdG,UACR,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sCAGA,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAf,0BAGA,sBAAKA,UAAU,eAAf,UACGD,EAAUpB,aADb,2BAC+BoB,EAAUnB,aADzC,eAIF,sBAAKoB,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAf,gCAGA,sBAAKA,UAAU,eAAf,UACGD,EAAUlB,WADb,2BAC6BkB,EAAUjB,WADvC,kBAKJ,qBAAKkB,UAAU,eAAf,SAEID,EAAUrB,KAAK0B,KAAI,SAAAhB,GACjB,OACE,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKhB,SAOpB,qBAAK4B,UAAU,iBAAf,SACE,wBAAQA,UAAU,wBAAwBG,QAAS,kBAAMJ,EAAUhB,YAAnE,0CCrCJsB,EAAY,IHFhB,aAAe,oBACb9B,KAAKwB,UAAY,IAAItB,GGGzB6B,IAASC,OACP,cAAC,EAAD,CAAmBf,MAAOa,EAA1B,SACE,cAAC,EAAD,MAEFG,SAASC,eAAe,W","file":"static/js/main.f5f42283.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\"\r\n\r\nclass ItemStore {\r\n  id = Math.random()\r\n  title = ''\r\n  count = 0\r\n  constructor(title, count) {\r\n    this.title = title\r\n    this.count = count\r\n    makeAutoObservable(this)\r\n  }\r\n}\r\n\r\nexport default ItemStore","import { makeAutoObservable } from \"mobx\"\r\nimport ItemStore from './ItemStore'\r\n\r\nclass ListStore {\r\n  list = []\r\n  currentApple = 0\r\n  currentCount = 0\r\n  eatenApple = 0\r\n  eatenCount = 0\r\n  constructor(list) {\r\n    if (list) {\r\n      this.list = list\r\n    }\r\n    makeAutoObservable(this)\r\n  }\r\n  addApple = () => {\r\n    const count = Math.floor(Math.random() * 90 + 10) \r\n    this.currentApple++\r\n    this.currentCount += count\r\n    this.list.push(new ItemStore('红苹果-' + count, count))\r\n  }\r\n  removeApple = (id) => {\r\n    this.list = []\r\n    this.list.forEach(item => {\r\n      if (item.id === id) {\r\n        this.currentApple--\r\n        this.currentCount -= item.count\r\n        this.eatenApple++\r\n        this.eatenCount += item.count\r\n      }else{\r\n        this.list.push(item)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default ListStore","import { createContext, useContext } from \"react\";\r\nimport ListStore from \"./Apple/ListStore\";\r\n\r\nclass RootStore {\r\n  constructor() {\r\n    this.listStore = new ListStore()\r\n  }\r\n}\r\n\r\nconst RootStoreContext = createContext()\r\n\r\nconst RootStoreProvider = ({ store, children }) => {\r\n  return (\r\n    <RootStoreContext.Provider value={store}>\r\n      {children}\r\n    </RootStoreContext.Provider>\r\n  )\r\n}\r\n\r\nconst useRootStore = () => {\r\n  return useContext(RootStoreContext)\r\n}\r\n\r\nexport {\r\n  RootStore,\r\n  RootStoreProvider,\r\n  useRootStore\r\n}","import { observer } from 'mobx-react-lite'\r\nimport { useRootStore } from '../../stores/RootStore'\r\n\r\nconst Item = ({ item }) => {\r\n  const { listStore } = useRootStore()\r\n  return (\r\n    <div className='item_contain'>\r\n      <div className='apple_img'>\r\n        <img src='./apple.png' alt='apple' />\r\n      </div>\r\n      <div className='apple_content'>\r\n        <div className='apple_content_top'>{item.title}</div>\r\n        <div className='apple_content_bottom'>{item.count}克</div>\r\n      </div>\r\n      <div className='apple_right'>\r\n        <button className='apple_btn' onClick={() => { listStore.removeApple(item.id) }}>吃掉</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(Item)","import Item from './Item'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useRootStore } from '../../stores/RootStore'\r\n\r\nconst List = () => {\r\n  const { listStore } = useRootStore()\r\n  return (\r\n    <div className='contain_box'>\r\n      <div className='inner_contain'>\r\n        <div className='contain_title'>\r\n          苹果篮子\r\n        </div>\r\n        <div className='contain_count'>\r\n          <div className='count_left'>\r\n            <div className='count_top'>\r\n              当前\r\n            </div>\r\n            <div className='count_bottom'>\r\n              {listStore.currentApple}个苹果，{listStore.currentCount}克\r\n            </div>\r\n          </div>\r\n          <div className='count_left'>\r\n            <div className='count_top'>\r\n              已吃掉\r\n            </div>\r\n            <div className='count_bottom'>\r\n              {listStore.eatenApple}个苹果，{listStore.eatenCount}克\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='contain_list'>\r\n          {\r\n            listStore.list.map(item => {\r\n              return (\r\n                <Item\r\n                  key={item.id}\r\n                  item={item}\r\n                />\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        <div className='contain_footer'>\r\n          <button className='contain_footer_button' onClick={() => listStore.addApple()}>摘苹果</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(List)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport List from './components/Apple/List'\nimport { RootStore, RootStoreProvider } from './stores/RootStore';\n\nconst rootStore = new RootStore()\n\nReactDOM.render(\n  <RootStoreProvider store={rootStore}>\n    <List />\n  </RootStoreProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}